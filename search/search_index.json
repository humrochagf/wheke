{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"<p> A cute framework for small self-hosted apps <sup><sub>artwork by @bissgigi</sub></sup> </p> <p> </p>"},{"location":"#introduction","title":"Introduction","text":"<p>Wheke is an opinionated framework to build small scale self-hosted applications and it stands on top of well known packages:</p> <ul> <li>FastAPI to build the web services.</li> <li>svcs to have a robust service registry.</li> <li>Typer to build great cli.</li> <li>Pydantic to build schemas and <code>.env</code> based settings.</li> <li>Rich to make your app shine.</li> </ul> <p>It aims to provide you:</p> <ul> <li>An opinionated structure to write you apps.</li> <li>Modular architecture by plugging Pods to it.</li> <li>Self contained by default.</li> <li>Stateless and lazy loading when possible.</li> <li>Nosql friendly structure.</li> <li>Less boilerplate and more fun.</li> </ul> <p>Wheke is also inspired by Django and recognises its strengths.</p> <p>If you are looking to build a self-hosted SQL based app and don't want to decide each bit of your stack, you'll probably be better served with Django.</p> <p>If you want to customize all of your stack, FastAPI is the way to go.</p> <p>If you are looking for something in between, then give Wheke a spin and see if you like it.</p>"},{"location":"#installation","title":"Installation","text":"<p>To install Wheke run:</p> <pre><code>pip install wheke\n</code></pre> <p>Then you need a ASGI web server to serve the FastAPI app created by Wheke:</p> <pre><code>pip install uvicorn[standard]\n</code></pre>"},{"location":"#example-app","title":"Example App","text":"<p>To see how a Wheke app in a single file looks like let's create a <code>main.py</code> file and add a route to show a timezone aware clock:</p> File: main.py<pre><code>from datetime import datetime, timezone\nfrom zoneinfo import ZoneInfo, ZoneInfoNotFoundError\n\nfrom fastapi import APIRouter, HTTPException, status\nfrom wheke import Pod, Wheke\nfrom wheke.demo import demo_pod\n\nrouter = APIRouter()\n\n\n@router.get(\"/clock\")\ndef clock(tz: str | None = None) -&gt; dict:\n    try:\n        if tz:\n            zone_info = ZoneInfo(tz)\n        else:\n            zone_info = None\n    except ZoneInfoNotFoundError:\n        raise HTTPException(\n            status_code=status.HTTP_400_BAD_REQUEST,\n            detail=\"Invalid timezone\",\n        )\n\n    return {\"clock\": datetime.now(timezone.utc).astimezone(zone_info)}\n\n\nmy_pod = Pod(\"my-pod\", router=router)\n\nwheke = Wheke()\nwheke.add_pod(demo_pod)\nwheke.add_pod(my_pod)\n\napp = wheke.create_app()\n</code></pre> <p>To start the server run:</p> <pre><code>uvicon main:app --reload\n</code></pre> <p>Now you can check the app at http://127.0.0.1:8000</p> <p></p> <p>You can also check the created clock endpoint at http://localhost:8000/clock?tz=America/Montreal and the response should look like this:</p> <pre><code>{\"clock\": \"2023-12-09T20:55:35.194766-05:00\"}\n</code></pre> <p>As any FastAPI app you have built-in api docs at http://localhost:8000/docs</p>"},{"location":"api/","title":"API Docs","text":""},{"location":"api/#wheke.Wheke","title":"Wheke","text":"<pre><code>Wheke()\n</code></pre> <p>The Wheke class is the entry point to build an application.</p>"},{"location":"api/#wheke.Wheke.pods","title":"pods  <code>instance-attribute</code>","text":"<pre><code>pods = []\n</code></pre> <p>The list of pods plugged to Wheke.</p>"},{"location":"api/#wheke.Wheke.add_pod","title":"add_pod","text":"<pre><code>add_pod(pod_to_add)\n</code></pre> <p>Programatically plug a <code>Pod</code> into Wheke.</p>"},{"location":"api/#wheke.Wheke.create_app","title":"create_app","text":"<pre><code>create_app()\n</code></pre> <p>Create a FastAPI app with all plugged pods.</p>"},{"location":"api/#wheke.Wheke.create_cli","title":"create_cli","text":"<pre><code>create_cli()\n</code></pre> <p>Create a Typer cli with all plugged pods.</p>"},{"location":"api/#wheke.Pod","title":"Pod","text":"<pre><code>Pod(name, *, router=None, static_url=None, static_path=None, services=None, cli=None)\n</code></pre> <p>A Pod is the base unity that controls a funcionality.</p>"},{"location":"api/#wheke.Pod.name","title":"name  <code>instance-attribute</code>","text":"<pre><code>name = name\n</code></pre> <p>The name of the Pod.</p>"},{"location":"api/#wheke.Pod.router","title":"router  <code>instance-attribute</code>","text":"<pre><code>router = router\n</code></pre> <p>The router from <code>fastapi.APIRouter</code> that contains all the routes for the Pod.</p>"},{"location":"api/#wheke.Pod.static_url","title":"static_url  <code>instance-attribute</code>","text":"<pre><code>static_url = static_url\n</code></pre> <p>The url prefix for the Pod static files.</p>"},{"location":"api/#wheke.Pod.static_path","title":"static_path  <code>instance-attribute</code>","text":"<pre><code>static_path\n</code></pre> <p>The path to the Pod static files.</p>"},{"location":"api/#wheke.Pod.services","title":"services  <code>instance-attribute</code>","text":"<pre><code>services = services or []\n</code></pre> <p>The list of services provided by the Pod.</p> <p>It consists of a tuple of the service class and the service factory callable.</p>"},{"location":"api/#wheke.Pod.cli","title":"cli  <code>instance-attribute</code>","text":"<pre><code>cli = cli\n</code></pre> <p>The Typer cli of the Pod</p>"},{"location":"api/#wheke.aget_service","title":"aget_service  <code>async</code>","text":"<pre><code>aget_service(service_type)\n</code></pre>"},{"location":"api/#wheke.get_service","title":"get_service","text":"<pre><code>get_service(service_type)\n</code></pre>"},{"location":"pods/","title":"Pods","text":"<p>The core of Wheke's modularity lies on the <code>Pod</code> class.</p> <p>Once you have your code ready you can bundle it in a Pod to be plugged in Wheke:</p> <pre><code>from fastapi import APIRouter\nfrom wheke import Pod, Wheke\n\nrouter = APIRouter()\n\n\n@router.get(\"/hello\")\ndef hello() -&gt; dict:\n    return {\"hello\": \"world\"}\n\n\nmy_pod = Pod(\"my-pod\", router=router)  # Create the pod\n\nwheke = Wheke()\nwheke.add_pod(my_pod)  # Add the pod to wheke\n\napp = wheke.create_app()\n</code></pre>"},{"location":"pods/#ready-to-use-pods","title":"Ready to use Pods","text":"<p>Pods can be developed and published as a package for other to use.</p> <p>These are examples of pods that offer ready to use functionalities:</p> <ul> <li>wheke-auth: A Pod that adds auth to Wheke.</li> </ul>"}]}