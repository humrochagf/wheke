{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"<p> A cute framework for small self-hosted apps <sup><sub>artwork by @bissgigi</sub></sup> </p> <p> </p>"},{"location":"#introduction","title":"Introduction","text":"<p>Wheke is an opinionated framework to build FastAPI based web apps that are focussed in small scale self-hosted applications and having fun \ud83c\udf89</p>"},{"location":"#installation","title":"Installation","text":"<p>To install Wheke run:</p> <pre><code>pip install wheke\n</code></pre> <p>Then you need a ASGI web server to serve the FastAPI app created by wheke:</p> <pre><code>pip install uvicorn[standard]\n</code></pre>"},{"location":"#example-app","title":"Example App","text":"<p>To see how a Wheke app in a single file looks like let's create a <code>main.py</code> file and add a route to show a timezone aware clock:</p> File: main.py<pre><code>from datetime import datetime, timezone\nfrom zoneinfo import ZoneInfo, ZoneInfoNotFoundError\n\nfrom fastapi import APIRouter, HTTPException, status\nfrom wheke import Pod, Wheke\n\nrouter = APIRouter()\n\n\n@router.get(\"/clock\")\ndef clock(tz: str | None = None) -&gt; dict:\n    try:\n        if tz:\n            zone_info = ZoneInfo(tz)\n        else:\n            zone_info = None\n    except ZoneInfoNotFoundError:\n        raise HTTPException(\n            status_code=status.HTTP_400_BAD_REQUEST,\n            detail=\"Invalid timezone\",\n        )\n\n    return {\"clock\": datetime.now(timezone.utc).astimezone(zone_info)}\n\n\nmy_pod = Pod(\"my-pod\", router=router)\n\nwheke = Wheke()\nwheke.add_pod(my_pod)\n\napp = wheke.create_app()\n</code></pre> <p>To start the server run:</p> <pre><code>uvicon main:app --reload\n</code></pre> <p>Now you can check the app at http://127.0.0.1:8000</p> <p></p> <p>And you can also check the created clock endpoint at http://localhost:8000/clock?tz=America/Montreal</p> <p>You should get a response like this:</p> <pre><code>{\"clock\": \"2023-12-09T20:55:35.194766-05:00\"}\n</code></pre> <p>Also, as any FastAPI apps you have built-in api docs at http://localhost:8000/docs</p>"},{"location":"api/","title":"API Docs","text":""},{"location":"api/#wheke.Wheke","title":"Wheke","text":"<pre><code>Wheke()\n</code></pre> <p>The Wheke class is the entry point to build an application.</p>"},{"location":"api/#wheke.Wheke.pods","title":"pods  <code>instance-attribute</code>","text":"<pre><code>pods = []\n</code></pre> <p>The list of pods plugged to Wheke.</p>"},{"location":"api/#wheke.Wheke.add_pod","title":"add_pod","text":"<pre><code>add_pod(pod_to_add)\n</code></pre> <p>Programatically plug a <code>Pod</code> into Wheke.</p>"},{"location":"api/#wheke.Wheke.create_app","title":"create_app","text":"<pre><code>create_app()\n</code></pre> <p>Create a FastAPI app with all plugged pods.</p>"},{"location":"api/#wheke.Wheke.create_cli","title":"create_cli","text":"<pre><code>create_cli()\n</code></pre> <p>Create a Typer cli with all plugged pods.</p>"},{"location":"api/#wheke.Pod","title":"Pod","text":"<pre><code>Pod(name, *, router=None, static_url=None, static_path=None, services=None, cli=None)\n</code></pre> <p>A Pod is the base unity that controls a funcionality.</p>"},{"location":"api/#wheke.Pod.name","title":"name  <code>instance-attribute</code>","text":"<pre><code>name = name\n</code></pre> <p>The name of the Pod.</p>"},{"location":"api/#wheke.Pod.router","title":"router  <code>instance-attribute</code>","text":"<pre><code>router = router\n</code></pre> <p>The router from <code>fastapi.APIRouter</code> that contains all the routes for the Pod.</p>"},{"location":"api/#wheke.Pod.static_url","title":"static_url  <code>instance-attribute</code>","text":"<pre><code>static_url = static_url\n</code></pre> <p>The url prefix for the Pod static files.</p>"},{"location":"api/#wheke.Pod.static_path","title":"static_path  <code>instance-attribute</code>","text":"<pre><code>static_path\n</code></pre> <p>The path to the Pod static files.</p>"},{"location":"api/#wheke.Pod.services","title":"services  <code>instance-attribute</code>","text":"<pre><code>services = services or []\n</code></pre> <p>The list of services provided by the Pod.</p> <p>It consists of a tuple of the service class and the service factory callable.</p>"},{"location":"api/#wheke.Pod.cli","title":"cli  <code>instance-attribute</code>","text":"<pre><code>cli = cli\n</code></pre> <p>The Typer cli of the Pod</p>"},{"location":"api/#wheke.Service","title":"Service","text":"<p>             Bases: <code>ABC</code></p> <p>The Service base class that all Wheke services must implement.</p>"},{"location":"api/#wheke.ServiceRegistry","title":"ServiceRegistry","text":"<p>ServiceRegistry used to register and get services.</p>"},{"location":"api/#wheke.ServiceRegistry.register","title":"register  <code>classmethod</code>","text":"<pre><code>register(service_type, service_factory)\n</code></pre> <p>Register a service by providing its class and the service factory callable.</p>"},{"location":"api/#wheke.ServiceRegistry.get","title":"get  <code>classmethod</code>","text":"<pre><code>get(service_type)\n</code></pre> <p>Get a service by its class.</p>"}]}